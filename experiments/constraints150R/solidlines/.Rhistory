xlab("\u03B8 (Consensus)") +
ylab("ARP/IRP score")+
theme_linedraw()+
ylim(0,.2)+
theme(legend.position = "none",
legend.direction = "vertical")+
theme(text=element_text(family="Times New Roman")) +
theme(legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.text = element_markdown())+
scale_shape_manual("attribute", values =c(NA,  19, 23, 8))+
scale_color_manual("attribute", values=c(fairnessarea,gender_clr, race_clr, inter_clr))+
scale_linetype_manual("attribute", values=c(NA, "solid", "solid", "solid"))+
ggtitle(highf) +
theme(plot.title = element_text(hjust=0, size=title_size))+
#guides(linetype = guide_legend(override.aes = list(linetype = c(NA, 0, 0, 0) ) ))+
guides(color = guide_legend(override.aes = list(shape = c(15,  19, 23, 8) ) ))
grDevices::cairo_pdf(file = "multi_constraints.pdf",   # The directory you want to save the file in
width = pdfwidth, # The width of the plot in inches
height = pdfheight)
ggarrange(p_multi_lf, p_multi_mf, p_multi_hf,
ncol = 3, nrow = 1,
common.legend = FALSE)
# Step 3: Run dev.off() to create the file!
dev.off()
#########################
greedyResults <- cleanResults %>%
filter(method == "Greedy_Fair")
greedyResults_LF <- greedyResults %>%
filter(level == "lowf")
greedyResults_MF <- greedyResults %>%
filter(level == "medf")
greedyResults_HF <- greedyResults %>%
filter(level == "highf")
p_greedy_lf <- ggplot(greedyResults_LF, aes(shape = attribute, color = attribute, linetype = attribute)) +
annotate("rect", xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = .1, fill = fairnessarea, color = NA)+
geom_point(aes(x  = theta, y = score), size = pt_size)+
geom_line(mapping = aes(x  = theta, y= score), size = linesize)+
xlab("\u03B8 (Consensus)") +
ylab("ARP/IRP score")+
theme_linedraw()+
ylim(0,.2)+
theme(legend.position = "none",
legend.direction = "vertical")+
theme(text=element_text(family="Times New Roman")) +
theme(legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.text = element_markdown())+
scale_shape_manual("attribute", values =c(NA,  19, 23, 8))+
scale_color_manual("attribute", values=c(fairnessarea,gender_clr, race_clr, inter_clr))+
scale_linetype_manual("attribute", values=c(NA, "solid", "solid", "solid"))+
ggtitle(lowf) +
theme(plot.title = element_text(hjust=0, size=title_size))+
#guides(linetype = guide_legend(override.aes = list(linetype = c(NA, 0, 0, 0) ) ))+
guides(color = guide_legend(override.aes = list(shape = c(15, 19, 23, 8) ) ))
p_greedy_mf <- ggplot(greedyResults_MF, aes(shape = attribute, color = attribute, linetype = attribute)) +
annotate("rect", xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = .1, fill = fairnessarea, color = NA)+
geom_point(aes(x  = theta, y = score), size = pt_size)+
geom_line(mapping = aes(x  = theta, y= score), size = linesize)+
xlab("\u03B8 (Consensus)") +
ylab("ARP/IRP score")+
theme_linedraw()+
ylim(0,.2)+
theme(legend.position = "none",
legend.direction = "vertical")+
theme(text=element_text(family="Times New Roman")) +
theme(legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.text = element_markdown())+
scale_shape_manual("attribute", values =c(NA,  19, 23, 8))+
scale_color_manual("attribute", values=c(fairnessarea,gender_clr, race_clr, inter_clr))+
scale_linetype_manual("attribute", values=c(NA, "solid", "solid", "solid"))+
ggtitle(medf) +
theme(plot.title = element_text(hjust=0, size=title_size))+
#guides(linetype = guide_legend(override.aes = list(linetype = c(NA, 0, 0, 0) ) ))+
guides(color = guide_legend(override.aes = list(shape = c(15,  19, 23, 8) ) ))
p_greedy_hf <- ggplot(greedyResults_HF, aes(shape = attribute, color = attribute, linetype = attribute)) +
annotate("rect", xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = .1, fill = fairnessarea, color = NA)+
geom_point(aes(x  = theta, y = score), size = pt_size)+
geom_line(mapping = aes(x  = theta, y= score), size = linesize)+
xlab("\u03B8 (Consensus)") +
ylab("ARP/IRP score")+
theme_linedraw()+
ylim(0,.2)+
theme(legend.position = "none",
legend.direction = "horizontal",
legend.text = element_text(size = 14))+
theme(text=element_text(family="Times New Roman")) +
theme(legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.text = element_markdown())+
guides(color=guide_legend(nrow=2))+
guides(shape = guide_legend(nrow = 2))+
scale_shape_manual("attribute", values =c(NA,  19, 23, 8))+
scale_color_manual("attribute", values=c(fairnessarea,gender_clr, race_clr, inter_clr))+
scale_linetype_manual("attribute", values=c(NA, "solid", "solid", "solid"))+
ggtitle(highf) +
theme(plot.title = element_text(hjust=0, size=title_size))+
#guides(linetype = guide_legend(override.aes = list(linetype = c(NA, 0, 0, 0) ) ))+
guides(color = guide_legend(override.aes = list(shape = c(15,  19, 23, 8) ) ))
grDevices::cairo_pdf(file = "post_constraints.pdf",   # The directory you want to save the file in
width = pdfwidth, # The width of the plot in inches
height = pdfheight)
ggarrange(p_greedy_lf, p_greedy_mf, p_greedy_hf,
ncol = 3, nrow = 1,
common.legend = FALSE)
# Step 3: Run dev.off() to create the file!
dev.off()
library(tidyverse)
library(readr)
setwd("~/OneDrive - Worcester Polytechnic Institute (wpi.edu)/PycharmProjects/multi_fair_rank_agg/experiments/csrankings")
csrankings_results <- read_csv("csrankings_results.csv")
csrankings <- csrankings_results %>%
rename('intersection (location x type)' = irp) %>%
mutate(method_group = recode(method_group, `base_rank` ="Base Rankings")) %>%
pivot_longer(cols = c("location", "type", "intersection (location x type)"), names_to = "attribute", values_to = "score")%>%
mutate(rank_type=recode(rank_type,
`kemeny`="kemeny consensus",
`Multi-Fair`= "fair consensus",
`greedy_fair`= "fair consensus")) %>%
mutate(method_group=recode(method_group,
`Kemeny`="Kemeny",
`Multi-Fair`= "MFRA- IP",
`greedy_fair`= "MFRA- PC"))%>%
mutate(attribute=fct_relevel(attribute,c("location", "type", "intersection (location x type)")))
pdfwidth <- 9.5
pdfheight <- 3
location_clr <- "#e377c2"
type_clr <- "#bcbd22"
intersection_clr <- "#8c564b"
ggplot(csrankings, aes(rank_type, score, color = attribute)) +
geom_point(aes(shape = attribute), size = 3)+
facet_grid(cols = vars(method_group), scales = "free", space = "free", shrink = TRUE, labeller = label_wrap_gen(width = 4))+
theme_linedraw()+
theme(legend.position = "top",
legend.direction = "horizontal",
legend.title = element_blank(),
legend.text = element_text(size = 14),
strip.background = element_rect(fill="white"))+
scale_shape_manual("attribute", values =c(19, 17, 8))+
theme(strip.text.x = element_text(size = 8, color = "black"))+
theme(axis.text.x = element_text(angle=35))+
ylab("ARP/IRP score")+
xlab("")+
theme(text=element_text(family="Times New Roman"))+
scale_color_manual(values=c(location_clr, type_clr , intersection_clr))+
scale_x_discrete(labels = function(x) str_wrap(x, width = 4))
pdfwidth <- 9.5
pdfheight <- 3
location_clr <- "mediumblue"
type_clr <- "gray17"
intersection_clr <- "#ff7f0e"
ggplot(csrankings, aes(rank_type, score, color = attribute)) +
geom_point(aes(shape = attribute), size = 3)+
facet_grid(cols = vars(method_group), scales = "free", space = "free", shrink = TRUE, labeller = label_wrap_gen(width = 4))+
theme_linedraw()+
theme(legend.position = "top",
legend.direction = "horizontal",
legend.title = element_blank(),
legend.text = element_text(size = 14),
strip.background = element_rect(fill="white"))+
scale_shape_manual("attribute", values =c(19, 17, 8))+
theme(strip.text.x = element_text(size = 8, color = "black"))+
theme(axis.text.x = element_text(angle=35))+
ylab("ARP/IRP score")+
xlab("")+
theme(text=element_text(family="Times New Roman"))+
scale_color_manual(values=c(location_clr, type_clr , intersection_clr))+
scale_x_discrete(labels = function(x) str_wrap(x, width = 4))
library(tidyverse)
library(readr)
setwd("~/OneDrive - Worcester Polytechnic Institute (wpi.edu)/PycharmProjects/multi_fair_rank_agg/experiments/csrankings")
csrankings_results <- read_csv("csrankings_results.csv")
csrankings <- csrankings_results %>%
rename('intersection (location x type)' = irp) %>%
mutate(method_group = recode(method_group, `base_rank` ="Base Rankings")) %>%
pivot_longer(cols = c("location", "type", "intersection (location x type)"), names_to = "attribute", values_to = "score")%>%
mutate(rank_type=recode(rank_type,
`kemeny`="kemeny consensus",
`Multi-Fair`= "fair consensus",
`greedy_fair`= "fair consensus")) %>%
mutate(method_group=recode(method_group,
`Kemeny`="Kemeny",
`Multi-Fair`= "MFRA- IP",
`greedy_fair`= "MFRA- PC"))%>%
mutate(attribute=fct_relevel(attribute,c("location", "type", "intersection (location x type)")))
pdfwidth <- 9.5
pdfheight <- 3
location_clr <- "mediumblue"
type_clr <- "gray17"
intersection_clr <- "#ff7f0e"
grDevices::cairo_pdf(file = "csrankings_results.pdf",   # The directory you want to save the file in
width = pdfwidth, # The width of the plot in inches
height = pdfheight, pointsize = 2)
ggplot(csrankings, aes(rank_type, score, color = attribute)) +
geom_point(aes(shape = attribute), size = 3)+
facet_grid(cols = vars(method_group), scales = "free", space = "free", shrink = TRUE, labeller = label_wrap_gen(width = 4))+
theme_linedraw()+
theme(legend.position = "top",
legend.direction = "horizontal",
legend.title = element_blank(),
legend.text = element_text(size = 14),
strip.background = element_rect(fill="white"))+
scale_shape_manual("attribute", values =c(19, 17, 8))+
theme(strip.text.x = element_text(size = 8, color = "black"))+
theme(axis.text.x = element_text(angle=35))+
ylab("ARP/IRP score")+
xlab("")+
theme(text=element_text(family="Times New Roman"))+
scale_color_manual(values=c(location_clr, type_clr , intersection_clr))+
scale_x_discrete(labels = function(x) str_wrap(x, width = 4))
# Step 3: Run dev.off() to create the file!
dev.off()
library(tidyverse)
library(readr)
setwd("~/OneDrive - Worcester Polytechnic Institute (wpi.edu)/PycharmProjects/multi_fair_rank_agg/experiments/exams")
exam_results_raw <- read_csv("exam_results.csv")
exam_results <- exam_results_raw %>%
rename(`intersection (gender x race x lunch)` = irp) %>%
mutate(method_group = recode(method_group, `base_rank` ="Base Rankings")) %>%
pivot_longer(cols = c("gender", "race", "lunch", "intersection (gender x race x lunch)"), names_to = "attribute", values_to = "score") %>%
mutate(rank_type=recode(rank_type,
`kemeny`="kemeny consensus",
`Multi-Fair`= "fair consensus",
`greedy_fair`= "fair consensus")) %>%
mutate(method_group=recode(method_group,
`Kemeny`="Kemeny",
`Multi-Fair`= "MFRA-IP",
`greedy_fair`= "MFRA-PC"))%>%
mutate(attribute=fct_relevel(attribute,c("gender", "race", "lunch", "intersection (gender x race x lunch)")))
pdfwidth <- 3.75
pdfheight <- 3
gender_clr <- "mediumblue"
lunch_clr <- "gray17"
race_clr <- ""#8c564b""
intersection_clr <- "#ff7f0e"
height = pdfheight)
ggplot(exam_results, aes(rank_type, score, color = attribute)) +
geom_point(aes(shape = attribute), size = 3)+
facet_grid(cols = vars(method_group), scales = "free", space = "free")+
theme_linedraw()+
theme(legend.position = "top",
legend.direction = "horizontal",
legend.title = element_blank(),
legend.text = element_text(size = 10),
strip.background = element_rect(fill="white"))+
guides(color=guide_legend(nrow=2))+
guides(shape = guide_legend(nrow = 2))+
scale_shape_manual("attribute", values =c(19, 17, 15, 8))+
theme(strip.text.x = element_text(size = 8, color = "black"))+
ylab("ARP/IRP score")+
xlab("")+
theme(text=element_text(family="Times New Roman"))+
scale_color_manual(values=c(gender_clr,lunch_clr, race_clr, intersection_clr))+
scale_x_discrete(labels = function(x) str_wrap(x, width = 4))
pdfwidth <- 3.75
pdfheight <- 3
gender_clr <- "mediumblue"
lunch_clr <- "gray17"
race_clr <- "#8c564b"
intersection_clr <- "#ff7f0e"
ggplot(exam_results, aes(rank_type, score, color = attribute)) +
geom_point(aes(shape = attribute), size = 3)+
facet_grid(cols = vars(method_group), scales = "free", space = "free")+
theme_linedraw()+
theme(legend.position = "top",
legend.direction = "horizontal",
legend.title = element_blank(),
legend.text = element_text(size = 10),
strip.background = element_rect(fill="white"))+
guides(color=guide_legend(nrow=2))+
guides(shape = guide_legend(nrow = 2))+
scale_shape_manual("attribute", values =c(19, 17, 15, 8))+
theme(strip.text.x = element_text(size = 8, color = "black"))+
ylab("ARP/IRP score")+
xlab("")+
theme(text=element_text(family="Times New Roman"))+
scale_color_manual(values=c(gender_clr,lunch_clr, race_clr, intersection_clr))+
scale_x_discrete(labels = function(x) str_wrap(x, width = 4))
library(tidyverse)
library(readr)
setwd("~/OneDrive - Worcester Polytechnic Institute (wpi.edu)/PycharmProjects/multi_fair_rank_agg/experiments/exams")
exam_results_raw <- read_csv("exam_results.csv")
exam_results <- exam_results_raw %>%
rename(`intersection (gender x race x lunch)` = irp) %>%
mutate(method_group = recode(method_group, `base_rank` ="Base Rankings")) %>%
pivot_longer(cols = c("gender", "race", "lunch", "intersection (gender x race x lunch)"), names_to = "attribute", values_to = "score") %>%
mutate(rank_type=recode(rank_type,
`kemeny`="kemeny consensus",
`Multi-Fair`= "fair consensus",
`greedy_fair`= "fair consensus")) %>%
mutate(method_group=recode(method_group,
`Kemeny`="Kemeny",
`Multi-Fair`= "MFRA-IP",
`greedy_fair`= "MFRA-PC"))%>%
mutate(attribute=fct_relevel(attribute,c("gender", "race", "lunch", "intersection (gender x race x lunch)")))
pdfwidth <- 3.75
pdfheight <- 3
gender_clr <- "mediumblue"
lunch_clr <- "gray17"
race_clr <- "#8c564b"
intersection_clr <- "#ff7f0e"
grDevices::cairo_pdf(file = "exam_results.pdf",   # The directory you want to save the file in
width = pdfwidth, # The width of the plot in inches
height = pdfheight)
ggplot(exam_results, aes(rank_type, score, color = attribute)) +
geom_point(aes(shape = attribute), size = 3)+
facet_grid(cols = vars(method_group), scales = "free", space = "free")+
theme_linedraw()+
theme(legend.position = "top",
legend.direction = "horizontal",
legend.title = element_blank(),
legend.text = element_text(size = 10),
strip.background = element_rect(fill="white"))+
guides(color=guide_legend(nrow=2))+
guides(shape = guide_legend(nrow = 2))+
scale_shape_manual("attribute", values =c(19, 17, 15, 8))+
theme(strip.text.x = element_text(size = 8, color = "black"))+
ylab("ARP/IRP score")+
xlab("")+
theme(text=element_text(family="Times New Roman"))+
scale_color_manual(values=c(gender_clr,lunch_clr, race_clr, intersection_clr))+
scale_x_discrete(labels = function(x) str_wrap(x, width = 4))
# Step 3: Run dev.off() to create the file!
dev.off()
library(cowplot)
library(tidyverse)
library(readr)
library("gridExtra")
library(ggpubr)
library(ggtext)
setwd("~/OneDrive - Worcester Polytechnic Institute (wpi.edu)/PycharmProjects/multi_fair_rank_agg/experiments/constraints150R")
Malowsresults_150r_constraints <- read_csv("Malowsresults_150r_constraints.csv")
cleanResults <- Malowsresults_150r_constraints %>%
rename('\u0394 (desired fairness)' = threshold, Gender = maxdifparity_gender , Race = maxdifparity_race, `Intersection (Race x Gender)` = maxdifparity_intersectional) %>%
select(theta, method, Gender, Race, `Intersection (Race x Gender)`,'\u0394 (desired fairness)', level) %>%
pivot_longer(cols = c("Gender", "Race", "Intersection (Race x Gender)", "\u0394 (desired fairness)"), names_to = "attribute", values_to = "score") %>%
mutate(attribute=fct_relevel(attribute,c("\u0394 (desired fairness)","Gender","Race", "Intersection (Race x Gender)")))
kemenyResults <- cleanResults %>%
filter(method == "Kemeny")
kemenyResults_LF <- kemenyResults %>%
filter(level == "lowf")
kemenyResults_MF <- kemenyResults %>%
filter(level == "medf")
kemenyResults_HF <- kemenyResults %>%
filter(level == "highf")
pt_size <- 2
title_size <- 10
lowf <- "Low-Fair"
medf <- "Medium-Fair"
highf <- "High-Fair"
pdfwidth <- 3.75
pdfheight <- 1.5
fairnessarea <- "#b2df8a"
race_clr <- "#a6cee3" #"mediumblue"
gender_clr <- "#1f78b4" #"gray17"
inter_clr <- "#fb9a99" #"#ff7f0e"
greedyResults <- cleanResults %>%
filter(method == "Greedy_Fair")
greedyResults_LF <- greedyResults %>%
filter(level == "lowf")
greedyResults_MF <- greedyResults %>%
filter(level == "medf")
greedyResults_HF <- greedyResults %>%
filter(level == "highf")
ggplot(greedyResults_HF, aes(shape = attribute, color = attribute, linetype = attribute)) +
annotate("rect", xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = .1, fill = fairnessarea, color = NA)+
geom_point(aes(x  = theta, y = score), size = pt_size)+
geom_line(mapping = aes(x  = theta, y= score), size = 1)+
xlab("\u03B8 (Consensus)") +
ylab("ARP/IRP score")+
theme_linedraw()+
ylim(0,.2)+
theme(legend.position = "top",
legend.direction = "horizontal",
legend.text = element_text(size = 14))+
theme(text=element_text(family="Times New Roman")) +
theme(legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.text = element_markdown())+
guides(color=guide_legend(nrow=2))+
guides(shape = guide_legend(nrow = 2))+
scale_shape_manual("attribute", values =c(NA, NA, NA, NA))+
scale_color_manual("attribute", values=c(fairnessarea,gender_clr, race_clr, inter_clr))+
scale_linetype_manual("attribute", values=c(NA, "dotted", "dashed", "dotdash"))+
ggtitle(highf) +
theme(plot.title = element_text(hjust=0, size=title_size))+
#guides(linetype = guide_legend(override.aes = list(linetype = c(NA, 0, 0, 0) ) ))+
guides(color = guide_legend(override.aes = list(shape = c(15, NA, NA, NA) ) ))
library(cowplot)
library(tidyverse)
library(readr)
library("gridExtra")
library(ggpubr)
library(ggtext)
setwd("~/OneDrive - Worcester Polytechnic Institute (wpi.edu)/PycharmProjects/multi_fair_rank_agg/experiments/constraints150R/solidlines")
Malowsresults_150r_constraints <- read_csv("~/OneDrive - Worcester Polytechnic Institute (wpi.edu)/PycharmProjects/multi_fair_rank_agg/experiments/constraints150R/Malowsresults_150r_constraints.csv")
cleanResults <- Malowsresults_150r_constraints %>%
rename('\u0394 (desired fairness)' = threshold, Gender = maxdifparity_gender , Race = maxdifparity_race, `Intersection (Race x Gender)` = maxdifparity_intersectional) %>%
select(theta, method, Gender, Race, `Intersection (Race x Gender)`,'\u0394 (desired fairness)', level) %>%
pivot_longer(cols = c("Gender", "Race", "Intersection (Race x Gender)", "\u0394 (desired fairness)"), names_to = "attribute", values_to = "score") %>%
mutate(attribute=fct_relevel(attribute,c("\u0394 (desired fairness)","Gender","Race", "Intersection (Race x Gender)")))
kemenyResults <- cleanResults %>%
filter(method == "Kemeny")
kemenyResults_LF <- kemenyResults %>%
filter(level == "lowf")
kemenyResults_MF <- kemenyResults %>%
filter(level == "medf")
kemenyResults_HF <- kemenyResults %>%
filter(level == "highf")
pt_size <- 2
title_size <- 10
lowf <- "Low-Fair"
medf <- "Medium-Fair"
highf <- "High-Fair"
pdfwidth <- 3.75 #3.75
pdfheight <- 1.5 #1.5
fairnessarea <- "#b2df8a"
race_clr <- "mediumblue"
gender_clr <- "gray17"
inter_clr <- "#ff7f0e"
linesize <- .5
ggplot(greedyResults_HF, aes(shape = attribute, color = attribute, linetype = attribute)) +
annotate("rect", xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = .1, fill = fairnessarea, color = NA)+
geom_point(aes(x  = theta, y = score), size = pt_size)+
geom_line(mapping = aes(x  = theta, y= score), size = linesize)+
xlab("\u03B8 (Consensus)") +
ylab("ARP/IRP score")+
theme_linedraw()+
ylim(0,.2)+
theme(legend.position = "top",
legend.direction = "horizontal",
legend.text = element_text(size = 14))+
theme(text=element_text(family="Times New Roman")) +
theme(legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.text = element_markdown())+
guides(color=guide_legend(nrow=2))+
guides(shape = guide_legend(nrow = 2))+
scale_shape_manual("attribute", values =c(NA,  19, 23, 8))+
scale_color_manual("attribute", values=c(fairnessarea,gender_clr, race_clr, inter_clr))+
scale_linetype_manual("attribute", values=c(NA, "solid", "solid", "solid"))+
ggtitle(highf) +
theme(plot.title = element_text(hjust=0, size=title_size))+
#guides(linetype = guide_legend(override.aes = list(linetype = c(NA, 0, 0, 0) ) ))+
guides(color = guide_legend(override.aes = list(shape = c(15,  19, 23, 8) ) ))
#########################
greedyResults <- cleanResults %>%
filter(method == "Greedy_Fair")
greedyResults_LF <- greedyResults %>%
filter(level == "lowf")
greedyResults_MF <- greedyResults %>%
filter(level == "medf")
greedyResults_HF <- greedyResults %>%
filter(level == "highf")
ggplot(greedyResults_HF, aes(shape = attribute, color = attribute, linetype = attribute)) +
annotate("rect", xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = .1, fill = fairnessarea, color = NA)+
geom_point(aes(x  = theta, y = score), size = pt_size)+
geom_line(mapping = aes(x  = theta, y= score), size = linesize)+
xlab("\u03B8 (Consensus)") +
ylab("ARP/IRP score")+
theme_linedraw()+
ylim(0,.2)+
theme(legend.position = "top",
legend.direction = "horizontal",
legend.text = element_text(size = 14))+
theme(text=element_text(family="Times New Roman")) +
theme(legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.text = element_markdown())+
guides(color=guide_legend(nrow=2))+
guides(shape = guide_legend(nrow = 2))+
scale_shape_manual("attribute", values =c(NA,  19, 23, 8))+
scale_color_manual("attribute", values=c(fairnessarea,gender_clr, race_clr, inter_clr))+
scale_linetype_manual("attribute", values=c(NA, "solid", "solid", "solid"))+
ggtitle(highf) +
theme(plot.title = element_text(hjust=0, size=title_size))+
#guides(linetype = guide_legend(override.aes = list(linetype = c(NA, 0, 0, 0) ) ))+
guides(color = guide_legend(override.aes = list(shape = c(15,  19, 23, 8) ) ))
ggplot(greedyResults_HF, aes(shape = attribute, color = attribute, linetype = attribute)) +
annotate("rect", xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = .1, fill = fairnessarea, color = NA)+
geom_point(aes(x  = theta, y = score), size = pt_size)+
geom_line(mapping = aes(x  = theta, y= score), size = linesize)+
xlab("\u03B8 (Consensus)") +
ylab("ARP/IRP score")+
theme_linedraw()+
ylim(0,.2)+
theme(legend.position = "top",
legend.direction = "horizontal",
legend.text = element_text(size = 14))+
theme(text=element_text(family="Times New Roman")) +
theme(legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.text = element_markdown())+
guides(color=guide_legend(nrow=2))+
guides(shape = guide_legend(nrow = 2))+
scale_shape_manual("attribute", values =c(NA,  19, 23, 8))+
scale_color_manual("attribute", values=c(fairnessarea,gender_clr, race_clr, inter_clr))+
scale_linetype_manual("attribute", values=c(NA, "solid", "solid", "solid"))+
#ggtitle(highf) +
ggtitle("Legend")+
theme(plot.title = element_text(hjust=0, size=title_size))+
#guides(linetype = guide_legend(override.aes = list(linetype = c(NA, 0, 0, 0) ) ))+
guides(color = guide_legend(override.aes = list(shape = c(15,  19, 23, 8) ) ))
